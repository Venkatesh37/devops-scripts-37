---
- name: Downloading PostgreSql Dependencies
  hosts: localhost
  vars:
    db_user: postgresql
    db_password: Sai@373737
    db_name: postgresdb

  tasks:
    - name: Downloading Java for PostgreSql
      yum:
        name: java-1.8.0-openjdk-devel
        state: present
      tags:
        - installjava
    - name: RunningThe Required Commands for PostgreSql
      command: "{{ item }}"
      with_items:
        - sysctl vm.max_map_count
        - sysctl fs.file-max
    - name: Downloading Postgresql Database
      yum:
        name: "{{ item }}"
      with_items:
          - postgresql-server
          - postgresql-contrib
    - name: Initializing The PostgreSqlDB
      command: sudo postgresql-setup initdb 
    - name: Enabling THE PostgreSql
      service:
        name: postgresql
        state: started
        enabled: yes
    - name: Creating PostgreSql Database
      postgresql_db:
        state: present
        name: "{{ db_name }}"
    - name: Create PostgerSqldb user
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
    - name: Grant db user access to app db
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
    - name: Allow md5 connection for the db user
      postgresql_pg_hba:
        dest: /var/lib/pgsql/data/pg_hba.conf
        contype: host
        databases: all
        method: md5
        users: "{{ db_user }}"
        create: true
---
- name: downloading java dependencies
  hosts: localhost
  become: yes
  become_user: root
  vars:
    db_user: postgresql
    db_password: Sai@373737
    db_name: postgresdb
  tasks:
    - name: Downloading JavaFOR PostgreSql
      yum:
        name: java-1.8.0-openjdk-devel
        state: present
    - name: Downloading PostgreSql RPM
      get_url:
        url: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        dest: /opt
        mode: "0755"
    - name: Downloading RPMFOR PostgreSql
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - postgresql13-server
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: /var/lib/pgsql/data/pg_hba.conf
      register: postgres_data
    - name: InitializingTHE PostgreSql DATABase
      command: sudo /usr/pgsql-13/bin/postgresql-13-setup initdb
      when: not postgres_data.stat.exists
    - name: EnablingTHE PostGRESQL Service
      service:
        name: postgresql-13
        state: started
        enabled: yes
      tags:
        - postgreservicestart
==========================================
below one is working fine
ref: https://stribny.name/blog/ansible-postgresql/
---
- name: installing postgresql tasks
  hosts: localhost
  vars:
    db_user: sdtv37
    db_password: sdtv373737
    db_name: sdtv
  tasks:
    - name: Installing Postgresql Dependencies
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - postgresql
        - postgresql-server
    - name: Installing Python pip
      yum:
        name: python2-pip
        state: present
    - name: Installing Python psycopg2
      pip:
        name: psycopg2-binary
        state: present
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: "Start and enable services"
      service:
        name: postgresql
        state: started
        enabled: yes
    - name: "Create app database"
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ db_user }}"
        create: true
      become: yes
      become_user: postgres

